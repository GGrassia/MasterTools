@page "/CharacterInfo"

@using LiteDB;
@using DnD.Models;
@using DnD.Entities;
@using System.ComponentModel.DataAnnotations;
@inject ICharacterRepository Repo

<h1>Here you'll find all the details of a single character and his inventory</h1>
<h2>Select the character you want info about</h2>
<EditForm Model="this">
<InputSelect TValue="CharacterEntity" @bind-Value="@character">
       @foreach (CharacterEntity character in characters)
        {
            <option Value="@character">@character.CharacterName</option>
        }

</InputSelect>
</EditForm>
<br>
<div class="card text-white bg-dark mb-3" style="width: 290px; height: 275px; float:left; border: 5px solid #DCE1DE; border-radius: 25px;">
        <div class="card-body">
            <h4 class="character name">Name: @character.CharacterName</h4>
            <h5 class="character class">Class: @character.Class</h5>
            <h6 class="character level">Level: @character.Level</h6>
            <div>HP:<input type="number" min="1" max="999" @bind="character.Hp"></div>
            <h6 class="character passive perception">Passive perception: @character.PassivePerception</h6>
            <button type="button" class="btn btn-danger" @onclick="@(() => CharacterRemove(character))">KILL HIM</button>
            <button type="button" data-toggle="button" class="btn btn-success" @onclick="@(() => TogglePlaying(character.CharacterName))">Playing? @character.Playing</button>
        </div>
    </div>


@code {

    private List<CharacterEntity> characters = new List<CharacterEntity>();
    private CharacterEntity character;

    protected override void OnInitialized()
    {
        characters = Repo.GetAll().ToList();
        character = characters.First();
    }

    private async Task CharacterRemove(CharacterEntity character)
    {
        if (await js.Confirm($"Are you sure you want to kill {character.CharacterName}?"))
        {
            Repo.Delete(character);
            characters.Remove(character);
        }

    }
    private void TogglePlaying(string characterName)
    {
        Repo.TogglePlaying(characterName);
        var ch = characters.First(c => c.CharacterName == characterName);
        ch.Playing = !ch.Playing;
    }

}