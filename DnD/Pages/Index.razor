@page "/"

@using DnD.Entities;
@inject ICharacterRepository Repo

<div class="titles">
    <h1 style="text-align: center; font: Z003; font-size: 70px;"><b>Welcome to the MasterTool!</b></h1>

    <h3 style="text-align: center;">This is a tool to help you keep track of passive stats and inventory of your
        players.</h3>
</div>
<br />

<h2>Select the characters who are playing this session</h2>

@foreach (var character in characters)
{
    <div class="card text-white mb-3" style="width: 290px;
    height: 275px;
    background-color: rgba(28, 108, 185, 0.69);
    backdrop-filter: blur(2px);
    float:left;
    margin: 25px;
    border-radius: 25px;">
        <div class="card-body">
            <h4>Name: @character.CharacterName</h4>
            <h5>Class: @character.Class</h5>
            <span>Level: <input contenteditable="true" type="number" min="1" max="20" @bind="character.Level"></span>
            <div>HP:<input type="number" min="1" max="999" @bind="character.Hp" style="width: 100px; margin: 5px;"></div>
            <div>Passive perception: <input type="number" min="1" max="30" @bind="character.PassivePerception"
    style="width: 50px; margin: 5px;"></div>
            <button type="button" class="btn btn-danger" @onclick="@(async () => await CharacterRemove(character))">KILL HIM</button>
            <button type="button" data-toggle="button" class="btn btn-success"
            @onclick="(async () => await TogglePlaying(character))">Playing? @character.Playing</button>
        </div>
    </div>
}


@code {
    private List<Character> characters = new List<Character>();

    protected override void OnInitialized()
    {
        characters = Repo.GetAll().ToList();
    }

    private async Task CharacterRemove(Character character)
    {
        if (await js.Confirm($"Are you sure you want to kill {character.CharacterName}?"))
        {
            await Repo.Delete(character);
            characters.Remove(character);
        }
    }

    private async Task TogglePlaying(Character character)
    {
        character.Playing = !character.Playing;
        await Repo.Update(character);
    }
}